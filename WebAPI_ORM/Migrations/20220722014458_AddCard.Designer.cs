// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_ORM.storage;

#nullable disable

namespace WebAPI_ORM.Migrations
{
    [DbContext(typeof(CityMapContext))]
    [Migration("20220722014458_AddCard")]
    partial class AddCard
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.6.22329.4");

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.Citizen", b =>
                {
                    b.Property<int>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardUID")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("FlatUuid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.HasIndex("FlatUuid");

                    b.ToTable("Citizen");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.City", b =>
                {
                    b.Property<int>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("City");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.Flat", b =>
                {
                    b.Property<int>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HouseUuid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.HasIndex("HouseUuid");

                    b.ToTable("Flat");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.House", b =>
                {
                    b.Property<int>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityUuid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FloorsNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.HasIndex("CityUuid");

                    b.ToTable("House");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.Citizen", b =>
                {
                    b.HasOne("WebAPI_ORM.storage.entities.implementation.Flat", "Flat")
                        .WithMany("Citizens")
                        .HasForeignKey("FlatUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flat");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.Flat", b =>
                {
                    b.HasOne("WebAPI_ORM.storage.entities.implementation.House", "House")
                        .WithMany("Flats")
                        .HasForeignKey("HouseUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.House", b =>
                {
                    b.HasOne("WebAPI_ORM.storage.entities.implementation.City", "City")
                        .WithMany("Houses")
                        .HasForeignKey("CityUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.City", b =>
                {
                    b.Navigation("Houses");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.Flat", b =>
                {
                    b.Navigation("Citizens");
                });

            modelBuilder.Entity("WebAPI_ORM.storage.entities.implementation.House", b =>
                {
                    b.Navigation("Flats");
                });
#pragma warning restore 612, 618
        }
    }
}
